name: 'Build docker standlone image'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
 
    strategy:
  
      matrix:

        name: [
          alpine-aarch64,
          alpine-arm32v7,
          alpine-x86_64,
        ]

        include:
          # Build for arm v8 64-bit Linux environments.
          - name: alpine-aarch64
            os: ubuntu-latest
            PLATFORM: linux/arm64

          # Build for amd64 64-bit Linux environments.
          - name: alpine-x86_64
            os: ubuntu-latest
            PLATFORM: linux/amd64

          # Build for arm v7 32bit Linux environments.
          - name: alpine-arm32v7
            os: ubuntu-latest
            PLATFORM: linux/arm/v7

    steps:
      - uses: actions/checkout@v4
        
      # Extract version number from package.json
      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep -oP '"version": "\K(.*)(?=")' src/docker-standalone/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Create a multi-platform builder
      - name: Set up multi-platform builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap

      # Build and push Docker image for multiple platforms
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/docker-standalone/Dockerfile
          platforms: ${{ matrix.PLATFORM }}
          tags: n0rt0nthec4t/nest_accfactory:${{ env.VERSION }}
          build-args: NEST_ACCFACTORY_VERSION=${{ env.VERSION }}
          push: false
    
