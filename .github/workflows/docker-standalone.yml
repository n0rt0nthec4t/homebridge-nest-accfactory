name: 'Build docker Nest_accfactory'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
 
    strategy:
  
      matrix:

        name: [
          alpine-aarch64,
          alpine-x86_64,
        ]

        include:
          # Build for arm v8 64-bit Linux environments.
          - name: alpine-aarch64
            os: ubuntu-latest
            PLATFORM: linux/arm64

          # Build for amd64 64-bit Linux environments.
          - name: alpine-x86_64
            os: ubuntu-latest
            PLATFORM: linux/amd64

    steps:
      - uses: actions/checkout@v4
        
      # Extract version number from package.json
      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep -oP '"version": "\K(.*)(?=")' src/docker-standalone/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # docker meta
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Create a multi-platform builder
      - name: Set up multi-platform builder
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap

      # Log into docker
      - name: Docker Login
        uses: docker/login-action@v3  
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image for multiple platforms
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.PLATFORM }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: NEST_ACCFACTORY_VERSION=${{ env.VERSION }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
    
